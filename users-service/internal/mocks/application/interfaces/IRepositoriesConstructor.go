// Code generated by mockery v2.14.0. DO NOT EDIT.

package interfaces

import (
	interfaces "github.com/Abdulrahman-Tayara/notes-app/users-service/core/application/interfaces"
	mock "github.com/stretchr/testify/mock"
)

// IRepositoriesConstructor is an autogenerated mock type for the IRepositoriesConstructor type
type IRepositoriesConstructor struct {
	mock.Mock
}

// UsersRead provides a mock function with given fields:
func (_m *IRepositoriesConstructor) UsersRead() interfaces.IUserReadRepository {
	ret := _m.Called()

	var r0 interfaces.IUserReadRepository
	if rf, ok := ret.Get(0).(func() interfaces.IUserReadRepository); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.IUserReadRepository)
		}
	}

	return r0
}

// UsersWrite provides a mock function with given fields:
func (_m *IRepositoriesConstructor) UsersWrite() interfaces.IUserWriteRepository {
	ret := _m.Called()

	var r0 interfaces.IUserWriteRepository
	if rf, ok := ret.Get(0).(func() interfaces.IUserWriteRepository); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.IUserWriteRepository)
		}
	}

	return r0
}

type mockConstructorTestingTNewIRepositoriesConstructor interface {
	mock.TestingT
	Cleanup(func())
}

// NewIRepositoriesConstructor creates a new instance of IRepositoriesConstructor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIRepositoriesConstructor(t mockConstructorTestingTNewIRepositoriesConstructor) *IRepositoriesConstructor {
	mock := &IRepositoriesConstructor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
